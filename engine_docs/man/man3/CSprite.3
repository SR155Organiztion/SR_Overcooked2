.TH "CSprite" 3 "Version 1.0" "Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CSprite
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <CSprite\&.h>\fP
.PP
\fBCComponent\fP를(을) 상속했습니다\&.
.SS "Public 멤버 함수"

.in +1c
.ti -1c
.RI "HRESULT \fBReady_Sprite\fP (const \fB_tchar\fP *pPath, const \fB_uint\fP &iCnt, LPDIRECT3DDEVICE9 pGraphicDev)"
.br
.ti -1c
.RI "void \fBRender_SpriteAlpha\fP (float ScaleX, float ScaleY, const RECT *m_pSrcRect, D3DXVECTOR3 *m_pCenter, D3DXVECTOR3 _m_vPos, const \fB_tchar\fP *szKeyName, int _m_iAlpha=255)"
.br
.ti -1c
.RI "void \fBRender_Sprite\fP (float ScaleX, float ScaleY, const RECT *m_pSrcRect, D3DXVECTOR3 *m_pCenter, D3DXVECTOR3 _m_vPos, const \fB_tchar\fP *szKeyName)"
.br
.ti -1c
.RI "void \fBRender_Sprite\fP (float ScaleX, float ScaleY, const RECT *m_pSrcRect, D3DXVECTOR3 *m_pCenter, D3DXVECTOR3 _m_vPos, LPDIRECT3DTEXTURE9 pTex)"
.br
.ti -1c
.RI "\fBCSprite\fP * \fBClone\fP () override"
.br
.ti -1c
.RI "LPD3DXSPRITE \fBGet_Sprite\fP ()"
.br
.ti -1c
.RI "LPDIRECT3DTEXTURE9 \fBGet_Texture\fP ()"
.br
.in -1c

\fBCComponent\fP(으)로부터 상속된 Public 멤버 함수
.in +1c
.ti -1c
.RI "virtual \fB_int\fP \fBUpdate_Component\fP (const \fB_float\fP &fTimeDelta)"
.br
.ti -1c
.RI "virtual void \fBLateUpdate_Component\fP ()"
.br
.in -1c
.SS "정적 Public 멤버 함수"

.in +1c
.ti -1c
.RI "static \fBCSprite\fP * \fBCreate\fP (LPDIRECT3DDEVICE9 pGraphicDev, const \fB_tchar\fP *pPath, const \fB_uint\fP &iCnt=1)"
.br
.in -1c
.SS "추가로 상속된 멤버들"


\fBCComponent\fP(으)로부터 상속된 Protected 멤버 함수
.in +1c
.ti -1c
.RI "\fBCComponent\fP ()"
.br
.ti -1c
.RI "\fBCComponent\fP (LPDIRECT3DDEVICE9 pGraphicDev)"
.br
.ti -1c
.RI "\fBCComponent\fP (const \fBCComponent\fP &rhs)"
.br
.ti -1c
.RI "virtual \fB~CComponent\fP ()"
.br
.in -1c

\fBCComponent\fP(으)로부터 상속된 Protected 속성
.in +1c
.ti -1c
.RI "LPDIRECT3DDEVICE9 \fBm_pGraphicDev\fP"
.br
.ti -1c
.RI "\fB_bool\fP \fBm_bClone\fP"
.br
.in -1c
.SH "상세한 설명"
.PP 
\fBCSprite\&.h\fP 파일의 \fB7\fP 번째 라인에서 정의되었습니다\&.
.SH "멤버 함수 문서화"
.PP 
.SS "\fBCSprite\fP * CSprite::Clone ()\fR [inline]\fP, \fR [override]\fP, \fR [virtual]\fP"

.PP
\fBCComponent\fP(으)로부터 재구현되었습니다\&.
.PP
\fBCSprite\&.h\fP 파일의 \fB27\fP 번째 라인에서 정의되었습니다\&.
.SS "\fBCSprite\fP * CSprite::Create (LPDIRECT3DDEVICE9 pGraphicDev, const \fB_tchar\fP * pPath, const \fB_uint\fP & iCnt = \fR1\fP)\fR [static]\fP"

.PP
\fBCSprite\&.cpp\fP 파일의 \fB120\fP 번째 라인에서 정의되었습니다\&.
.SS "LPD3DXSPRITE CSprite::Get_Sprite ()\fR [inline]\fP"

.PP
\fBCSprite\&.h\fP 파일의 \fB34\fP 번째 라인에서 정의되었습니다\&.
.SS "LPDIRECT3DTEXTURE9 CSprite::Get_Texture ()\fR [inline]\fP"

.PP
\fBCSprite\&.h\fP 파일의 \fB35\fP 번째 라인에서 정의되었습니다\&.
.SS "HRESULT CSprite::Ready_Sprite (const \fB_tchar\fP * pPath, const \fB_uint\fP & iCnt, LPDIRECT3DDEVICE9 pGraphicDev)"

.PP
\fBCSprite\&.cpp\fP 파일의 \fB37\fP 번째 라인에서 정의되었습니다\&.
.SS "void CSprite::Render_Sprite (float ScaleX, float ScaleY, const RECT * m_pSrcRect, D3DXVECTOR3 * m_pCenter, D3DXVECTOR3 _m_vPos, const \fB_tchar\fP * szKeyName)"

.PP
\fBCSprite\&.cpp\fP 파일의 \fB83\fP 번째 라인에서 정의되었습니다\&.
.SS "void CSprite::Render_Sprite (float ScaleX, float ScaleY, const RECT * m_pSrcRect, D3DXVECTOR3 * m_pCenter, D3DXVECTOR3 _m_vPos, LPDIRECT3DTEXTURE9 pTex)"

.PP
\fBCSprite\&.cpp\fP 파일의 \fB104\fP 번째 라인에서 정의되었습니다\&.
.SS "void CSprite::Render_SpriteAlpha (float ScaleX, float ScaleY, const RECT * m_pSrcRect, D3DXVECTOR3 * m_pCenter, D3DXVECTOR3 _m_vPos, const \fB_tchar\fP * szKeyName, int _m_iAlpha = \fR255\fP)"

.PP
\fBCSprite\&.cpp\fP 파일의 \fB63\fP 번째 라인에서 정의되었습니다\&.

.SH "작성자"
.PP 
소스 코드로부터 Engine를 위해 Doxygen에 의해 자동으로 생성됨\&.
