.TH "CTransform" 3 "Version 1.0" "Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CTransform
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <CTransform\&.h>\fP
.PP
\fBCComponent\fP를(을) 상속했습니다\&.
.SS "Public 멤버 함수"

.in +1c
.ti -1c
.RI "void \fBGet_Info\fP (\fBINFO\fP eType, \fB_vec3\fP *pInfo)"
.br
.ti -1c
.RI "\fB_vec3\fP \fBGet_PrevInfo\fP ()"
.br
.ti -1c
.RI "\fB_vec3\fP \fBGet_NextInfo\fP ()"
.br
.ti -1c
.RI "void \fBMove_Pos\fP (const \fB_vec3\fP *pDir, const \fB_float\fP &fSpeed, const \fB_float\fP &fTimeDelta)"
.br
.ti -1c
.RI "void \fBMove_Velocity\fP (const \fB_float\fP &_fTimeDelta)"
.br
.ti -1c
.RI "void \fBSet_Velocity\fP (const \fB_vec3\fP &vVel, \fB_float\fP _fDeltaTime)"
.br
.ti -1c
.RI "void \fBAdd_Velocity\fP (const \fB_vec3\fP &_vVel)"
.br
.ti -1c
.RI "void \fBAdd_Pos\fP (const \fB_vec3\fP &vDelta)"
.br
.ti -1c
.RI "\fB_vec3\fP * \fBGet_Velocity\fP ()"
.br
.ti -1c
.RI "void \fBRotation\fP (\fBROTATION\fP eType, const \fB_float\fP &fAngle)"
.br
.ti -1c
.RI "const \fB_matrix\fP * \fBGet_World\fP () const"
.br
.ti -1c
.RI "void \fBGet_World\fP (\fB_matrix\fP *pWorld) const"
.br
.ti -1c
.RI "\fB_vec3\fP \fBGet_Scale\fP () const"
.br
.ti -1c
.RI "void \fBSet_World\fP (const \fB_matrix\fP *pWorld)"
.br
.ti -1c
.RI "void \fBSet_Scale\fP (const \fB_vec3\fP &vScale)"
.br
.ti -1c
.RI "void \fBChase_Target\fP (const \fB_vec3\fP *pTargetPos, const \fB_float\fP &fSpeed, const \fB_float\fP &fTimeDelta)"
.br
.ti -1c
.RI "const \fB_matrix\fP * \fBCompute_LookAtTarget\fP (const \fB_vec3\fP *pTargetPos)"
.br
.ti -1c
.RI "void \fBSet_Pos\fP (\fB_float\fP _fX, \fB_float\fP _fY, \fB_float\fP _fZ)"
.br
.ti -1c
.RI "void \fBSet_Look\fP (const \fB_vec3\fP *_vLook)"
.br
.ti -1c
.RI "HRESULT \fBReady_Transform\fP ()"
.br
.ti -1c
.RI "virtual \fB_int\fP \fBUpdate_Component\fP (const \fB_float\fP &fTimeDelta)"
.br
.ti -1c
.RI "virtual void \fBLateUpdate_Component\fP ()"
.br
.ti -1c
.RI "virtual \fBCComponent\fP * \fBClone\fP ()"
.br
.in -1c
.SS "정적 Public 멤버 함수"

.in +1c
.ti -1c
.RI "static \fBCTransform\fP * \fBCreate\fP (LPDIRECT3DDEVICE9 pGraphicDev)"
.br
.in -1c
.SS "Public 속성"

.in +1c
.ti -1c
.RI "\fB_vec3\fP \fBm_vInfo\fP [\fBINFO_END\fP]"
.br
.ti -1c
.RI "\fB_vec3\fP \fBm_vScale\fP"
.br
.ti -1c
.RI "\fB_vec3\fP \fBm_vAngle\fP"
.br
.ti -1c
.RI "\fB_vec3\fP \fBm_vPrevPos\fP"
.br
.ti -1c
.RI "\fB_vec3\fP \fBm_vNextPos\fP"
.br
.ti -1c
.RI "\fB_vec3\fP \fBm_vVelocity\fP = { 0\&.f, 0\&.f, 0\&.f }"
.br
.ti -1c
.RI "\fB_matrix\fP \fBm_matWorld\fP"
.br
.ti -1c
.RI "\fB_bool\fP \fBm_bBlocked\fP [3] = { false, false, false }"
.br
.in -1c
.SS "추가로 상속된 멤버들"


\fBCComponent\fP(으)로부터 상속된 Protected 멤버 함수
.in +1c
.ti -1c
.RI "\fBCComponent\fP ()"
.br
.ti -1c
.RI "\fBCComponent\fP (LPDIRECT3DDEVICE9 pGraphicDev)"
.br
.ti -1c
.RI "\fBCComponent\fP (const \fBCComponent\fP &rhs)"
.br
.ti -1c
.RI "virtual \fB~CComponent\fP ()"
.br
.in -1c

\fBCComponent\fP(으)로부터 상속된 Protected 속성
.in +1c
.ti -1c
.RI "LPDIRECT3DDEVICE9 \fBm_pGraphicDev\fP"
.br
.ti -1c
.RI "\fB_bool\fP \fBm_bClone\fP"
.br
.in -1c
.SH "상세한 설명"
.PP 
\fBCTransform\&.h\fP 파일의 \fB7\fP 번째 라인에서 정의되었습니다\&.
.SH "멤버 함수 문서화"
.PP 
.SS "void CTransform::Add_Pos (const \fB_vec3\fP & vDelta)\fR [inline]\fP"

.PP
\fBCTransform\&.h\fP 파일의 \fB48\fP 번째 라인에서 정의되었습니다\&.
.SS "void CTransform::Add_Velocity (const \fB_vec3\fP & _vVel)\fR [inline]\fP"

.PP
\fBCTransform\&.h\fP 파일의 \fB44\fP 번째 라인에서 정의되었습니다\&.
.SS "void CTransform::Chase_Target (const \fB_vec3\fP * pTargetPos, const \fB_float\fP & fSpeed, const \fB_float\fP & fTimeDelta)"

.PP
\fBCTransform\&.cpp\fP 파일의 \fB50\fP 번째 라인에서 정의되었습니다\&.
.SS "\fBCComponent\fP * CTransform::Clone ()\fR [virtual]\fP"

.PP
\fBCComponent\fP(으)로부터 재구현되었습니다\&.
.PP
\fBCTransform\&.cpp\fP 파일의 \fB151\fP 번째 라인에서 정의되었습니다\&.
.SS "const \fB_matrix\fP * CTransform::Compute_LookAtTarget (const \fB_vec3\fP * pTargetPos)"

.PP
\fBCTransform\&.cpp\fP 파일의 \fB67\fP 번째 라인에서 정의되었습니다\&.
.SS "\fBCTransform\fP * CTransform::Create (LPDIRECT3DDEVICE9 pGraphicDev)\fR [static]\fP"

.PP
\fBCTransform\&.cpp\fP 파일의 \fB156\fP 번째 라인에서 정의되었습니다\&.
.SS "void CTransform::Get_Info (\fBINFO\fP eType, \fB_vec3\fP * pInfo)\fR [inline]\fP"

.PP
\fBCTransform\&.h\fP 파일의 \fB16\fP 번째 라인에서 정의되었습니다\&.
.SS "\fB_vec3\fP CTransform::Get_NextInfo ()\fR [inline]\fP"

.PP
\fBCTransform\&.h\fP 파일의 \fB25\fP 번째 라인에서 정의되었습니다\&.
.SS "\fB_vec3\fP CTransform::Get_PrevInfo ()\fR [inline]\fP"

.PP
\fBCTransform\&.h\fP 파일의 \fB21\fP 번째 라인에서 정의되었습니다\&.
.SS "\fB_vec3\fP CTransform::Get_Scale () const\fR [inline]\fP"

.PP
\fBCTransform\&.h\fP 파일의 \fB68\fP 번째 라인에서 정의되었습니다\&.
.SS "\fB_vec3\fP * CTransform::Get_Velocity ()\fR [inline]\fP"

.PP
\fBCTransform\&.h\fP 파일의 \fB53\fP 번째 라인에서 정의되었습니다\&.
.SS "const \fB_matrix\fP * CTransform::Get_World () const\fR [inline]\fP"

.PP
\fBCTransform\&.h\fP 파일의 \fB63\fP 번째 라인에서 정의되었습니다\&.
.SS "void CTransform::Get_World (\fB_matrix\fP * pWorld) const\fR [inline]\fP"

.PP
\fBCTransform\&.h\fP 파일의 \fB64\fP 번째 라인에서 정의되었습니다\&.
.SS "void CTransform::LateUpdate_Component ()\fR [virtual]\fP"

.PP
\fBCComponent\fP(으)로부터 재구현되었습니다\&.
.PP
\fBCTransform\&.cpp\fP 파일의 \fB146\fP 번째 라인에서 정의되었습니다\&.
.SS "void CTransform::Move_Pos (const \fB_vec3\fP * pDir, const \fB_float\fP & fSpeed, const \fB_float\fP & fTimeDelta)"

.PP
\fBCTransform\&.cpp\fP 파일의 \fB31\fP 번째 라인에서 정의되었습니다\&.
.SS "void CTransform::Move_Velocity (const \fB_float\fP & _fTimeDelta)\fR [inline]\fP"

.PP
\fBCTransform\&.h\fP 파일의 \fB31\fP 번째 라인에서 정의되었습니다\&.
.SS "HRESULT CTransform::Ready_Transform ()"

.PP
\fBCTransform\&.cpp\fP 파일의 \fB94\fP 번째 라인에서 정의되었습니다\&.
.SS "void CTransform::Rotation (\fBROTATION\fP eType, const \fB_float\fP & fAngle)\fR [inline]\fP"

.PP
\fBCTransform\&.h\fP 파일의 \fB58\fP 번째 라인에서 정의되었습니다\&.
.SS "void CTransform::Set_Look (const \fB_vec3\fP * _vLook)\fR [inline]\fP"

.PP
\fBCTransform\&.h\fP 파일의 \fB88\fP 번째 라인에서 정의되었습니다\&.
.SS "void CTransform::Set_Pos (\fB_float\fP _fX, \fB_float\fP _fY, \fB_float\fP _fZ)\fR [inline]\fP"

.PP
\fBCTransform\&.h\fP 파일의 \fB83\fP 번째 라인에서 정의되었습니다\&.
.SS "void CTransform::Set_Scale (const \fB_vec3\fP & vScale)\fR [inline]\fP"

.PP
\fBCTransform\&.h\fP 파일의 \fB75\fP 번째 라인에서 정의되었습니다\&.
.SS "void CTransform::Set_Velocity (const \fB_vec3\fP & vVel, \fB_float\fP _fDeltaTime)\fR [inline]\fP"

.PP
\fBCTransform\&.h\fP 파일의 \fB38\fP 번째 라인에서 정의되었습니다\&.
.SS "void CTransform::Set_World (const \fB_matrix\fP * pWorld)\fR [inline]\fP"

.PP
\fBCTransform\&.h\fP 파일의 \fB70\fP 번째 라인에서 정의되었습니다\&.
.SS "\fB_int\fP CTransform::Update_Component (const \fB_float\fP & fTimeDelta)\fR [virtual]\fP"

.PP
\fBCComponent\fP(으)로부터 재구현되었습니다\&.
.PP
\fBCTransform\&.cpp\fP 파일의 \fB104\fP 번째 라인에서 정의되었습니다\&.
.SH "멤버 데이터 문서화"
.PP 
.SS "\fB_bool\fP CTransform::m_bBlocked[3] = { false, false, false }"

.PP
\fBCTransform\&.h\fP 파일의 \fB107\fP 번째 라인에서 정의되었습니다\&.
.SS "\fB_matrix\fP CTransform::m_matWorld"

.PP
\fBCTransform\&.h\fP 파일의 \fB106\fP 번째 라인에서 정의되었습니다\&.
.SS "\fB_vec3\fP CTransform::m_vAngle"

.PP
\fBCTransform\&.h\fP 파일의 \fB101\fP 번째 라인에서 정의되었습니다\&.
.SS "\fB_vec3\fP CTransform::m_vInfo[\fBINFO_END\fP]"

.PP
\fBCTransform\&.h\fP 파일의 \fB99\fP 번째 라인에서 정의되었습니다\&.
.SS "\fB_vec3\fP CTransform::m_vNextPos"

.PP
\fBCTransform\&.h\fP 파일의 \fB103\fP 번째 라인에서 정의되었습니다\&.
.SS "\fB_vec3\fP CTransform::m_vPrevPos"

.PP
\fBCTransform\&.h\fP 파일의 \fB102\fP 번째 라인에서 정의되었습니다\&.
.SS "\fB_vec3\fP CTransform::m_vScale"

.PP
\fBCTransform\&.h\fP 파일의 \fB100\fP 번째 라인에서 정의되었습니다\&.
.SS "\fB_vec3\fP CTransform::m_vVelocity = { 0\&.f, 0\&.f, 0\&.f }"

.PP
\fBCTransform\&.h\fP 파일의 \fB104\fP 번째 라인에서 정의되었습니다\&.

.SH "작성자"
.PP 
소스 코드로부터 Engine를 위해 Doxygen에 의해 자동으로 생성됨\&.
